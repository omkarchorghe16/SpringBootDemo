
server.port=8080


#spring.main.web-application-type=none

#H2 DB props
#spring.datasource1.url=jdbc:h2:mem:sampledb
#spring.datasource1.driverClassName=org.h2.Driver
#spring.datasource1.username=db
#spring.datasource1.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true


#Postgres DB props
spring.datasource.jdbcUrl=jdbc:postgresql://localhost:5432/db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driverClassName=org.postgresql.Driver
#dataSource or dataSourceClassName or jdbcUrl is required.
#spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# This will create table automatically in your database
#spring.jpa.hibernate.ddl-auto=create


# Your desired user name and passowrd
#spring.security.user.name=admin
#spring.security.user.password=admin

# A comma separated list of roles
#spring.security.user.roles=USER

#spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
#springfox.documentation.auto-startup= false

